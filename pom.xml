<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>upgrade</groupId>
	<artifactId>upgrade-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>UpgradeApi</name>
	<description>Reservation Api</description>

	<properties>
		<java.version>1.8</java.version>
		<dockerVersionNumber>%l</dockerVersionNumber>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.11</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.8.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.8.0</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>29.0-jre</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.upgrade.UpgradApiApplication</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<verbose>true</verbose>
					<apiVersion>1.23</apiVersion>
					<authConfig>
						<username>${username}</username>
						<password>${password}</password>
					</authConfig>
					<pushRegistry>${pushRegistry}</pushRegistry>
					<buildArgs>
						<PROJECT_BUILD_FINAL_NAME>${project.artifactId}-${project.version}</PROJECT_BUILD_FINAL_NAME>
						<PROJECT_DIR>${project.artifactId}</PROJECT_DIR>
						<!-- When running from gitlab, environment variables will override 
							those proxy values -->
						<!--http_proxy>${HTTP_PROXY}</http_proxy> <https_proxy>${HTTPS_PROXY}</https_proxy> 
							<no_proxy>${NO_PROXY}</no_proxy -->
					</buildArgs>
					<images>
						<image>
							<!--%l == If the project version ends with -SNAPSHOT then this placeholder 
								is latest, otherwise its the full version (same as %v) -->
							<name>upgrade-images/${project.artifactId}:${dockerVersionNumber}</name>
							<alias>${project.artifactId}</alias>
							<build>
								<filter>@</filter>
								<cleanup>try</cleanup>
								<dockerFile>Dockerfile</dockerFile>
								<dockerFileDir>${project.basedir}</dockerFileDir>
								<assembly>
									<inline>
										<dependencySets>
											<dependencySet>
												<useStrictFiltering>true</useStrictFiltering>
												<includes>
													<include>${project.groupId}:${project.artifactId}:jar</include>
												</includes>
												<outputDirectory>${project.artifactId}</outputDirectory>
												<outputFileNameMapping>${project.artifactId}-${project.version}.jar</outputFileNameMapping>
											</dependencySet>
										</dependencySets>
										<fileSets>
											<fileSet>
												<directory>src/main/resources</directory>
												<includes>
													<include>**/*</include>
												</includes>
												<outputDirectory>${project.artifactId}/etc</outputDirectory>
											</fileSet>
										</fileSets>
									</inline>
								</assembly>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>generate-images</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>push-images</id>
						<phase>deploy</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
						<configuration>
							<image>upgrade-images/${project.artifactId}:%l</image>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
